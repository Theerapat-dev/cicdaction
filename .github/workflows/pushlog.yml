name: commitlog

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Check Code Quality and Build
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build --if-present

      - name: Save Error Logs
        if: ${{ failure() }}
        run: |
          echo "::set-output name=error_logs::$(find . -name '*.log' -exec cat {} +)"

  push_to_registry:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ github.repository }}

  send_notification:
    name: Send Notification on Failure
    runs-on: ubuntu-latest
    needs: [build, push_to_registry]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Error Logs
        if: ${{ needs.build.result == 'failure' || needs.push_to_registry.result == 'failure' }}
        uses: actions/download-artifact@v2
        with:
          name: error_logs
          path: ./error_logs

      - name: Send Email Notification
        if: ${{ always() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: ${{ github.workflow }} Failure Notification
          body: |
            Workflow ${{ github.workflow }} failed on repository ${{ github.repository }}.
            Error Logs:
            ${{ steps.download_error_logs.outputs.error_logs }}
          to: ${{ github.actor }}@example.com
          from: ${{ secrets.GMAIL_USERNAME }}

  get_commit_author_email:
    name: Get Commit Author Email
    runs-on: ubuntu-latest
    needs: [build, push_to_registry]

    outputs:
      commit_author_email: ${{ steps.get_commit_info.outputs.commit_author_email }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get Commit Info
        id: get_commit_info
        run: |
          COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "::set-output name=commit_author_email::${COMMIT_AUTHOR_EMAIL}"

  chain_flow_final:
    name: Final Step in Chain Flow
    runs-on: ubuntu-latest
    needs: [send_notification, get_commit_author_email]

    steps:
      - name: Print Workflow Completed Message
        run: echo "Workflow completed successfully!"

