name: commitlog

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build Project
        id: build
        run: |
          npm run build 2> build_errors.log
          exit_code=$?
          echo "error_files_present=$([[ $exit_code -ne 0 ]])" >> $GITHUB_OUTPUT

      - name: Upload Error Files
        if: ${{ steps.build.outputs.error_files_present == 'true' || always()}}
        uses: actions/upload-artifact@v3
        with:
          name: error-files
          path: build_errors.log

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: krisneonploy/dockerbuild

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create New Branch with Commit Hash
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name dornrock123
          git config user.email krisd3214@gmail.com
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          NEW_BRANCH_NAME="log-$(echo "$COMMIT_MESSAGE" | tr '[:upper:]' '[:lower:]' | tr '[:space:]' '-' | tr '[:punct:]' '-')"
          git checkout -b $NEW_BRANCH_NAME
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git $NEW_BRANCH_NAME


  get_commit_author_email:
    name: Get Commit Author Email
    runs-on: ubuntu-latest
    outputs:
      commit_author_email: ${{ steps.get_commit_info.outputs.commit_author_email }}
      changed_files: ${{ steps.get_commit_info.outputs.changed_files }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get Commit Info
        id: get_commit_info
        run: |
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')
          echo "::set-output name=commit_author_email::${AUTHOR_EMAIL}"
          echo "::set-output name=changed_files::${CHANGED_FILES}}"


  send_failure_notification:
    name: Send Failure Notification
    runs-on: ubuntu-latest
    needs: build
    if: ${{ failure() }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Download Error Files
        uses: actions/download-artifact@v3
        with:
          name: error-files

      - name: Get Error Log and Changed Files Info
        id: error_info
        run: |
          commit_author_email=$(git log -1 --pretty=format:'%ae')
          error_log=$(cat build_errors.log)
          raw_error_files=$(grep -o '/.*' build_errors.log | cut -d'/' -f1 | sort -u | tr '\n' ',')
          changed_files=$(git diff-tree --no-commit-id --name-only -r HEAD | tr '\n' ',' | sed 's/,$//')
          all_files=$(echo "$changed_files" | tr ',' '\n' | sort -u)

          if [ -n "$raw_error_files" ]; then
            error_files="${raw_error_files%?}"
            error_paths="$error_files"
            non_error_files=$(comm -23 <(echo "$all_files") <(echo "$raw_error_files" | tr ',' '\n' | sort -u) | tr '\n' ',' | sed 's/,$//')
          else
            error_paths="ไม่พบข้อผิดพลาด"
            non_error_files="$changed_files"
          fi

          echo "error_log<<EOF" >> $GITHUB_OUTPUT
          echo "$error_log" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "error_paths=$error_paths" >> $GITHUB_OUTPUT
          echo "non_error_files=$non_error_files" >> $GITHUB_OUTPUT
          echo "changed_files=$changed_files" >> $GITHUB_OUTPUT
          echo "commit_author_email=$commit_author_email" >> $GITHUB_OUTPUT



  send_success_notification:
            name: Send Success Notification
            runs-on: ubuntu-latest
            needs: [lint, build, push_to_registry]
            if: ${{ always() }}
            steps:
              - name: Checkout Code
                uses: actions/checkout@v3
                with:
                  fetch-depth: 2

              - name: Get Commit Info
                id: commit_info
                run: |
                  commit_author_email=$(git log -1 --pretty=format:'%ae')
                  changed_files=$(git diff --name-only HEAD~1 HEAD | tr '\n' ' ')
                  echo "commit_author_email=$commit_author_email" >> $GITHUB_OUTPUT
                  echo "changed_files=$changed_files" >> $GITHUB_OUTPUT

              - name: Send email on success
                if: ${{ needs.build.result == 'success' }}
                uses: dawidd6/action-send-mail@v3
                with:
                  server_address: smtp.gmail.com
                  server_port: 587
                  username: ${{ secrets.GMAIL_USERNAME }}
                  password: ${{ secrets.GMAIL_APP_PASSWORD }}
                  subject: งาน ${{ github.job }} ของ ${{ github.repository }} สำเร็จ
                  body: |
                    งาน `build` ของ ${{ github.repository }}
                    commit successssssssssssss
                    ไฟล์ที่ถูก commit และ push คือ:
                    ${{ steps.commit_info.outputs.changed_files }}
                  to: ${{ steps.commit_info.outputs.commit_author_email }}
                  from: ${{ secrets.GMAIL_USERNAME }}
