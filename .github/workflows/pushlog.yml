name: commitlog

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]

jobs:

  lint:
    name: Lint Code Base
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Run Super-Linter
      uses: github/super-linter@v4
      env:
        VALIDATE_ALL_CODEBASE: false
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Check Code Quality
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: krisneonploy/dockerbuild
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Create New Branch with Commit Hash
      if: github.event_name == 'push'
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config user.name dornrock123
        git config user.email krisd3214@gmail.com
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        NEW_BRANCH_NAME="log-$(echo "$COMMIT_MESSAGE" | tr '[:upper:]' '[:lower:]' | tr '[:space:]' '-' | tr '[:punct:]' '-')"
        git checkout -b $NEW_BRANCH_NAME
        git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git $NEW_BRANCH_NAME

  send_notification:
    name: Send Notification
    runs-on: ubuntu-latest
    needs: [lint, build, push_to_registry]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Get Commit Author Email
      id: get_commit_info
      run: |
        AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
        echo "::set-output name=commit_author_email::${AUTHOR_EMAIL}"

    - name: Check Workflow Status
      id: check_status
      run: |
        WORKFLOW_CONCLUSION=${{ job.status.conclusion }}
        
        if [ "$WORKFLOW_CONCLUSION" == "failure" ]; then
          echo "::set-output name=status::failure"
        else
          echo "::set-output name=status::success"
        fi

    - name: Send Failure Notification
      if: ${{ steps.check_status.outputs.status == 'failure' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_APP_PASSWORD }}
        subject: GitHub Action Failed
        body: 'The recent commit has failed the workflow. Please check the details on GitHub.'
        to: ${{ steps.get_commit_info.outputs.commit_author_email }}
        from: ${{ secrets.GMAIL_USERNAME }}

    - name: Send Success Notification
      if: ${{ steps.check_status.outputs.status == 'success' }}
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_APP_PASSWORD }}
        subject: GitHub Action Succeeded
        body: 'The recent commit has passed the workflow successfully.'
        to: ${{ steps.get_commit_info.outputs.commit_author_email }}
        from: ${{ secrets.GMAIL_USERNAME }}
